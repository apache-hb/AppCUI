name: build-cmake-redesign

on:
  push:
    branches:
      - cmake-redesign
  workflow_dispatch:
  pull_request:

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build-win-SDL:
    runs-on: [windows-latest]
    env:
      SDL2_URL: "https://www.libsdl.org/release/SDL2-devel-2.0.14-VC.zip"
      SDL2_TTF_URL: "https://www.libsdl.org/projects/SDL_ttf/release/SDL2_ttf-devel-2.0.15-VC.zip"
      SDL2_PATH: "C:\\SDL"
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Install requests
      run: pip install requests
    - name: Install SDL2
      run: python .github/workflows/win_sdl2.py
    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_PREFIX_PATH="C:\SDL\SDL2-2.0.14;C:\SDL\SDL2_ttf-2.0.15"
    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Add tag data to enviroment
      run: |
        $output=$(python .github/workflows/get_version.py AppCUI/include/AppCUI.hpp)
        echo "APPCUI_VERSION=$output" | Out-File -FilePath $env:GITHUB_ENV -Append
    
    - name: Create archive SDL
      run: |
        $output=$(7z a "AppCUI-SDL-${{ runner.os }}-${{ runner.arch }}-${{ env.APPCUI_VERSION }}.zip" D:/a/AppCUI/AppCUI/bin/Release/*.exe)
        echo "$output"
        $output=$(7z a "AppCUI-SDL-${{ runner.os }}-${{ runner.arch }}-${{ env.APPCUI_VERSION }}.zip" D:/a/AppCUI/AppCUI/bin/Release/*.dll)
        echo "$output"
        $output=$(7z a "AppCUI-SDL-${{ runner.os }}-${{ runner.arch }}-${{ env.APPCUI_VERSION }}.zip" D:/a/AppCUI/AppCUI/bin/Release/*/*.tpl)
        echo "$output"
        $output=$(7z a "AppCUI-SDL-${{ runner.os }}-${{ runner.arch }}-${{ env.APPCUI_VERSION }}.zip" D:/a/AppCUI/AppCUI/bin/Release/*/*.gpl)
        echo "$output"
    
    - name: Store Artifacts SDL
      uses: actions/upload-artifact@v3
      with:
        name: windows_artifacts
        path: "AppCUI-SDL-${{ runner.os }}-${{ runner.arch }}-${{ env.APPCUI_VERSION }}.zip"
        retention-days: 1

  build-win:
    runs-on: [windows-latest]
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    
    - name: Add tag data to enviroment
      run: |
        $output=$(python .github/workflows/get_version.py AppCUI/include/AppCUI.hpp)
        echo "APPCUI_VERSION=$output" | Out-File -FilePath $env:GITHUB_ENV -Append

    - name: Create archive
      run: |
        $output=$(7z a "AppCUI-${{ runner.os }}-${{ runner.arch }}-${{ env.APPCUI_VERSION }}.zip" D:/a/AppCUI/AppCUI/bin/Release/*.exe)
        echo "$output"
        $output=$(7z a "AppCUI-${{ runner.os }}-${{ runner.arch }}-${{ env.APPCUI_VERSION }}.zip" D:/a/AppCUI/AppCUI/bin/Release/*.dll)
        echo "$output"
        $output=$(7z a "AppCUI-${{ runner.os }}-${{ runner.arch }}-${{ env.APPCUI_VERSION }}.zip" D:/a/AppCUI/AppCUI/bin/Release/*/*.tpl)
        echo "$output"
        $output=$(7z a "AppCUI-${{ runner.os }}-${{ runner.arch }}-${{ env.APPCUI_VERSION }}.zip" D:/a/AppCUI/AppCUI/bin/Release/*/*.gpl)
        echo "$output"
    
    - name: Store Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: windows_artifacts
        path: "AppCUI-${{ runner.os }}-${{ runner.arch }}-${{ env.APPCUI_VERSION }}.zip"
        retention-days: 1
